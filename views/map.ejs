<%- partial('nav.ejs') %>
<p><a href="/tweet" id="tweet">Tweet about this event!</a></p>
<div id="map_canvas"></div>

<div id="speech_wrapper">
  <input id="speech" type="text" x-webkit-speech placeholder="Logout..." />
  <a id="skip" href="/auth/twitter">or click here...</a>
</div>

<script>
  
  (function check() {
    if( $('#speech').val().match(/mischief managed/i) ) {
      document.location.href = window.location.protocol + '//' + window.location.host + '/auth/logout';
    } else {
      setTimeout(check, 200);
    }
  }());
  
</script>

<!-- <script src="https://maps.googleapis.com/maps/api/js?sensor=true"></script> -->

<script src="http://cdn.leafletjs.com/leaflet-0.4.4/leaflet.js"></script>
<script type="text/javascript" src="http://maps.stamen.com/js/tile.stamen.js?v1.1.2"></script>

<script>
  var map, marauders = {}, initialised = false;

  // Initialise the map, geolocation and get other marauders from the db,
  // only when the page is ready
  $(function () {
    // Try HTML5 geolocation
    if(navigator.geolocation) {
      // Send our location to the server and update all the other
      // markers with data from other users
      updateLocation();
    } else {
      // Browser doesn't support Geolocation
    }
  });

  function updateLocation() {
    navigator.geolocation.getCurrentPosition(function(position) {

      // Build and object of my data
      var my_data = {
        hashtag: '<%= hashtag %>',
        lat: ''+position.coords.latitude,
        lng: ''+position.coords.longitude
      }

      // Send my location to the server, then add/update all points to the map
      $.post('/location', my_data, function(response) {

        // Grab the other marauders' data for adding/updating on the map
        getOtherMarauders(my_data.hashtag);
        
        // Trigger another update in 2.5 seconds
        setTimeout(function () {
          updateLocation(false);
        }, 1000 * 2.5);
      });

    }, function() {
      // Geo failed
    });
  }

  function getOtherMarauders(hashtag) {

    var rawtag = '<%= hashtag %>'.slice(1);

    // Get all the data for the currect hashtag
    $.get('/location/' + rawtag, function (data) {

      // Turn data in to a usable Javascript object
      data = JSON.parse(data);
      
      // // Add markers for each of the other Marauders
      // var blue_icon = new google.maps.MarkerImage("http://www.google.com/intl/en_us/mapfiles/ms/micons/blue-dot.png");
      // var green_icon = new google.maps.MarkerImage("http://www.google.com/intl/en_us/mapfiles/ms/micons/green-dot.png");

      // Initialisation stuff
      if( ! initialised ) {

        $('#tweet').attr('href', $('#tweet').attr('href') + '/' + rawtag);

        // Set up the map
        map = L.map('map_canvas').setView([data.target.lat, data.target.lng], 18);
        // Using the stamen toner layer
        var layer = new L.StamenTileLayer("toner");
        map.addLayer(layer);

        // Create a marker for the target location
        var target = L.marker(
          [data.target.lat, data.target.lng],
          { title: '#' + rawtag }
        ).addTo(map);

        // And bind a popup to it with the current hashtag
        target.bindPopup("#"+rawtag).openPopup();

        // Don't perform this again
        initialised = true;

      }

      data.marauders.forEach(function (server_marauder) {

        var marauder;

        if(marauders[server_marauder.id] !== undefined) {

          // This marauder already exists, just move the icon
          marauder = marauders[server_marauder.id];

          server_marauder.lat = parseFloat(server_marauder.lat);
          server_marauder.lng = parseFloat(server_marauder.lng);

          // Work out the difference between the latitude we are at
          // and the the longitude we want to get to (Angela & Oliver)
          var a = server_marauder.lat - marauder.lat;
          var o = server_marauder.lng - marauder.lng;

          // Find the angle to the target point (Dave)
          var d = Math.atan2(o, a) || 0;
          // And set the size of the step we will take in that direction (Juan)
          var j = 0.00002;

          // Find the distance between our current position and the target (Hazza)
          var h = Math.pow(a*a + o*o, 0.5) || 0;

          // If h is smaller than j (so we're very close), use h
          if(h < j && h > 0.0001) {
            j = h;
          }

          // Work out the require lat and lng to take a step in 
          // the direction of the target (Phillipa & Bob)
          var p = j * Math.cos(d);
          var b = j * Math.sin(d);

          // Update the location of this marauder by adding p & b
          marauder.lat = marauder.lat + p;
          marauder.lng = marauder.lng + b;

          marauder.marker.setLatLng([marauder.lat, marauder.lng]);

        } else {

          // This is a new marauder, add it to the map

          // Create an icon with their profile url
          var image_url = "https://api.twitter.com/1/users/profile_image?screen_name=" + server_marauder.user_name + "&size=normal"
          var image_icon = L.icon({
            iconUrl: image_url,
            iconSize: [24, 24]
          });
          
          // Set up the new marauder object
          marauder = {
            user_name: server_marauder.user_name,
            lat: parseFloat(server_marauder.lat),
            lng: parseFloat(server_marauder.lng),
            // Create a marker using their picture
            marker: L.marker(
              [parseFloat(server_marauder.lat), parseFloat(server_marauder.lng)],
              { icon: image_icon }
            )
          };

          // And add the marker to the map
          marauder.marker.addTo(map);

          // Bind a popup to the icon which contains their user_name
          marauder.marker.bindPopup(
            marauder.user_name
          );

          // Sore it for later in the marauders array
          marauders[server_marauder.id] = marauder;

        }
        
      });

    });

  }

</script>
