<div id="map_canvas"></div>

<div id="speech_wrapper">
  <input id="speech" type="text" x-webkit-speech />
</div>

<script>
  
  (function check() {
    if( $('#speech').val().match(/mischief managed/i) ) {
      document.location.href = window.location.protocol + '//' + window.location.host + '/auth/logout';
    } else {
      setTimeout(check, 200);
    }
  }());
  
</script>

<!-- <script src="https://maps.googleapis.com/maps/api/js?sensor=true"></script> -->

<script src="http://cdn.leafletjs.com/leaflet-0.4.4/leaflet.js"></script>
<script type="text/javascript" src="http://maps.stamen.com/js/tile.stamen.js?v1.1.2"></script>

<script>
  var map, marauders = {}, initialised = false;

  // Initialise the map, geolocation and get other marauders from the db
  $(function () {
    // Try HTML5 geolocation
    if(navigator.geolocation) {
      // Send our location to the server
      updateLocation();
    } else {
      // Browser doesn't support Geolocation
      handleNoGeolocation(false);
    }
  });

  function updateLocation() {
    navigator.geolocation.getCurrentPosition(function(position) {
        
        // Build and object of my data
        var my_data = {
          hashtag: '<%= hashtag %>',
          lat: ''+position.coords.latitude,
          lng: ''+position.coords.longitude
        }

        // Send my location to the server, then add all points to the map
        $.post('/location', my_data, function(response) {

          getOtherMarauders('<%= hashtag %>', my_data);
          
          // Trigger another update in 2.5 seconds
          setTimeout(updateLocation, 1000 * 2.5);
        });

      }, function() {
        handleNoGeolocation(true);
      });
  }

  function getOtherMarauders(hashtag, my_data) {

    var rawtag = '<%= hashtag %>'.slice(1);

    $.get('/location/' + rawtag, function (data) {

      data = JSON.parse(data);
      
      // // Add markers for each of the other Marauders
      // var blue_icon = new google.maps.MarkerImage("http://www.google.com/intl/en_us/mapfiles/ms/micons/blue-dot.png");
      // var green_icon = new google.maps.MarkerImage("http://www.google.com/intl/en_us/mapfiles/ms/micons/green-dot.png");

      // Initialisation stuff
      if( ! initialised ) {

        map = L.map('map_canvas').setView([data.target.lat, data.target.lng], 19);
        var layer = new L.StamenTileLayer("toner");
        map.addLayer(layer);

        var target = L.marker(
          [data.target.lat, data.target.lng],
          {
            title: '#' + rawtag
          }
        ).addTo(map);

        target.bindPopup("#"+rawtag).openPopup();

        initialised = true;

      }

      data.marauders.forEach(function (server_marauder) {

        var marauder;

        if(marauders[server_marauder.id] !== undefined) {

          // This marauder already exists, just move the icon
          marauder = marauders[server_marauder.id];
          marauder.lat = server_marauder.lat;
          marauder.lng = server_marauder.lng;

          if(marauder.lat - server_marauder.lat < 0.000015) {
            marauder.marker.setLatLng([parseFloat(marauder.lat), parseFloat(marauder.lng)]);
          }

        } else {

          // This is a new marauder, add it to the map

          // Create an icon with their profile url
          var image_url = "https://api.twitter.com/1/users/profile_image?screen_name=" + server_marauder.user_name + "&size=normal"
          console.log(image_url);
          var image_icon = L.icon({
            iconUrl: image_url,
            iconSize: [24, 24]
          });
          
          marauder = {
            user_name: server_marauder.user_name,
            lat: server_marauder.lat,
            lng: server_marauder.lng,
            marker: L.marker(
              [parseFloat(server_marauder.lat), parseFloat(server_marauder.lng)],
              { icon: image_icon }
            )
          };

          marauder.marker.addTo(map);

          marauder.marker.bindPopup(
            marauder.user_name
          );

          marauders[server_marauder.id] = marauder;

        }
        
      });

    });

  }

  function handleNoGeolocation(errorFlag) {
  }

</script>
